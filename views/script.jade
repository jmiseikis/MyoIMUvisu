
script.
  var myApp = angular.module('myApp',[]);
  var socket = io.connect('http://localhost:3000');
  var emg1 = 0, emg2 = 0, emg3 = 0, emg4 = 0, emg5 = 0, emg6 = 0, emg7 = 0, emg8 = 0;
  var emgXvals = [];
  var emgData = [[]];

  var orientation = {
    x: 0,
    y: 0,
    z: 0
  };
  var gyroscope = {
    x: 0,
    y: 0,
    z: 0
  };
  var accelerometer = {
    x: 0,
    y: 0,
    z: 0
  };
  
  socket.on('IMU Update', function(IMUmsg){
    orientation = IMUmsg.orientation;
    gyroscope = IMUmsg.gyroscope;
    accelerometer = IMUmsg.accelerometer;
  });

  myApp.controller('OrientationController', ['$scope','$interval', function($scope,$interval) {
    $interval(function(){
      $scope.x = orientation.x;
      $scope.y = orientation.y;
      $scope.z = orientation.z;
    },10);
  }]);

  myApp.controller('GyroscopeController', ['$scope','$interval', function($scope,$interval) {
    $interval(function(){
      $scope.x = gyroscope.x;
      $scope.y = gyroscope.y;
      $scope.z = gyroscope.z;
    },10);
  }]);

  myApp.controller('AccelerometerController', ['$scope','$interval', function($scope,$interval) {
    $interval(function(){
      $scope.x = accelerometer.x;
      $scope.y = accelerometer.y;
      $scope.z = accelerometer.z;
    },10);
  }]);

  function sendZero(){
    socket.emit('Zero orientation');
  }

  //initEMGData();
  // EMG Data
  function initEMGData() {
    //alert('initEMGData!');

    for (var i=0; i < 8; i++) {
      var temp = Array.apply(null, new Array(100)).map(Number.prototype.valueOf,20);
      emgData[i] = {
        datasets: [
          {
            data: temp
          }
        ]
      };
    }

    //alert('initEMGData! Done!');
  }



  socket.on('EMG Update', function(EMGmsg){
    //alert(EMGmsg);
    //shiftEMGData();
    //addEMGDataElement(EMGmsg);

    emg1 = EMGmsg[0];
    emg2 = EMGmsg[1];
    emg3 = EMGmsg[2];
    emg4 = EMGmsg[3];

    emg5 = EMGmsg[4];
    emg6 = EMGmsg[5];
    emg7 = EMGmsg[6];
    emg8 = EMGmsg[7];

    //updateGraphs();
  });

  function shiftEMGData() {
    for (var i=0; i < 8; i++) {
      emgData[i].shift;
    }
  }

  function addEMGDataElement(EMGmsg) {
    for (var i=0; i < 8; i++) {
      emgData[i].push(EMGmsg[i]);
    }
  }

  function feed(callback) {
    var tick = {};
    tick.plot0 = parseInt(10+900*Math.random(), 10);
    callback(JSON.stringify(tick));
  }

  // EMG CHARTS
  var chartData1={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed1()",
      "interval":100
    },
    "plot":{
        "aspect":"spline",
        "lineColor":"#A80000",
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData2={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed2()",
      "interval":100
    },
    "plot":{
        "aspect":"spline"
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData3={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed3()",
      "interval":100
    },
    "plot":{
        "aspect":"spline",
        "lineColor":"#FFCC00",
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData4={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed4()",
      "interval":100
    },
    "plot":{
        "aspect":"spline"
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData5={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed5()",
      "interval":100
    },
    "plot":{
        "aspect":"spline",
        "lineColor":"#0033CC",
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData6={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed6()",
      "interval":100
    },
    "plot":{
        "aspect":"spline"
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData7={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed7()",
      "interval":100
    },
    "plot":{
        "aspect":"spline"
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  var chartData8={
    "type": "line",
    "refresh":{
      "type":"feed",
      "transport":"js",
      "url":"feed8()",
      "interval":100
    },
    "plot":{
        "aspect":"spline"
    },
    "scale-y":{
        "values":"-200:200"
    },
    "series":[
    {
        "values":[]
    }
    ]
  };

  // END OF EMG CHARTS

  window.onload = function(){
    zingchart.render({
      id:'emg1',
      height:200,
      width:550,
      data:chartData1
    });

    /*zingchart.render({
      id:'emg2',
      height:200,
      width:550,
      data:chartData2
    });*/

    zingchart.render({
      id:'emg3',
      height:200,
      width:550,
      data:chartData3
    });

    /*zingchart.render({
      id:'emg4',
      height:200,
      width:550,
      data:chartData4
    });*/

    zingchart.render({
      id:'emg5',
      height:200,
      width:550,
      data:chartData5
    });

    /*zingchart.render({
      id:'emg6',
      height:200,
      width:550,
      data:chartData6
    });*/

    zingchart.render({
      id:'emg7',
      height:200,
      width:550,
      data:chartData7
    });

    /*zingchart.render({
      id:'emg8',
      height:200,
      width:550,
      data:chartData8
    });*/
  };

  window.feed1 = function(callback) {
    
    var tick = {};
    tick.plot0 = emg1;
    //tick.plot0 = parseInt(100-200*Math.random(), 10);
    callback(JSON.stringify(tick));
  };

  window.feed2 = function(callback) {
    var tick = {};
    tick.plot0 = emg2;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };

  window.feed3 = function(callback) {
    var tick = {};
    tick.plot0 = emg3;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };

  window.feed4 = function(callback) {
    var tick = {};
    tick.plot0 = emg4;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };

  window.feed5 = function(callback) {
    var tick = {};
    tick.plot0 = emg5;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };

  window.feed6 = function(callback) {
    var tick = {};
    tick.plot0 = emg6;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };

  window.feed7 = function(callback) {
    var tick = {};
    tick.plot0 = emg7;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };

  window.feed8 = function(callback) {
    var tick = {};
    tick.plot0 = emg8;
    //alert(tick.plot0);
    callback(JSON.stringify(tick));
  };